#=====================================================================================
# Spring Profile
#=====================================================================================
spring.jackson.time-zone=Asia/Seoul
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
server.shutdown=graceful
#=====================================================================================
# JDBC DataSource \uC124\uC815
#=====================================================================================
spring.datasource.hikari.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.hikari.jdbc-url=jdbc:log4jdbc:postgresql://3.38.179.146:59591/shopdb?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
spring.datasource.hikari.username=shopmaster
spring.datasource.hikari.password=ParK20250908
spring.datasource.hikari.pool-name=shop-database
# 커넥션 풀의 최대 수명 (30분)
#   - 하나의 DB 커넥션이 유지될 수 있는 최대 시간
#   - 이 시간이 지나면 커넥션은 폐기되고 새로 생성됨 (DB 네트워크 장애 예방)
spring.datasource.hikari.max-lifetime=1800000

# 커넥션 풀에서 커넥션을 얻을 때 최대 대기 시간 (30초)
#   - 지정한 시간 내에 커넥션을 얻지 못하면 예외 발생
#   - 이 경우 SQLException 발생
spring.datasource.hikari.connection-timeout=30000

# 커넥션 유효성 검사(Validation) 최대 대기 시간 (5초)
#   - 커넥션이 정상적으로 동작하는지 DB에 확인할 때의 최대 대기 시간
spring.datasource.hikari.validation-timeout=5000

# 커넥션 풀의 최대 커넥션 개수
#   - 동시에 사용할 수 있는 DB 커넥션의 최대 개수
#   - 트래픽 및 DB 성능을 고려하여 적절히 설정 (예: 15개)
spring.datasource.hikari.maximum-pool-size=15

# 최소 유휴(Idle) 커넥션 개수
#   - 항상 유지되는 최소한의 유휴 커넥션 개수
#   - 기본적으로는 5개 정도 유지
spring.datasource.hikari.minimum-idle=5

# 커넥션 유휴 시간 제한 (5분)
#   - 사용하지 않는 커넥션이 유지될 수 있는 최대 시간
#   - 단, minimum-idle 개수만큼은 항상 유지됨
spring.datasource.hikari.idle-timeout=300000


#=====================================================================================
# CORS ENDPOINT URL
#=====================================================================================
cors.endpoint.url=http://15.164.66.87:3000,http://test.shop.com,http://15.164.66.87

#=====================================================================================
# Slack
#=====================================================================================
slack.send.error.message=false
slack.web.hooks.url=https://hooks.slack.com/services/?????????

#=====================================================================================
# Azure File Storage
#=====================================================================================
azure.file.storage.connectionString=NONE
azure.blob.storage.connectionString=NONE
gazure.blob.storage.rootDirectory=NONE

#=====================================================================================
# Azure Communication Services
#=====================================================================================
azure.communication.services.connectionString=NONE
azure.communication.services.domain.mailFrom=NONE


#=====================================================================================
# Amazon S3
#=====================================================================================
aws.s3.access.key=11
aws.s3.secret.key=11
aws.s3.bucketName.name=shop-file
aws.s3.bucket.name=shop-file
